service: artfullylondon-user-service

frameworkVersion: ">=1.2.0 <2.0.0"

package:
    individually: true

provider:
    name: aws
    runtime: nodejs8.10
    region: eu-west-1
    tracing: true
    environment: ${file(env.yml):${self:custom.stage}}
    iamManagedPolicies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
    iamRoleStatements:
        -
            Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - Ref: "PublicUserDynamoTable"
        -
            Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - Ref: "WatchDynamoTable"
        -
            Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - Ref: "PreferenceDynamoTable"

plugins:
    - serverless-webpack
    - serverless-pseudo-parameters
    - serverless-plugin-tracing
    - serverless-dynamodb-local
    - serverless-offline

custom:
    project: artfullylondon
    stage: ${opt:stage}
    region: ${opt:region, self:provider.region}
    publicUserTableName: ${self:custom.project}-${self:custom.stage}-publicuser
    watchTableName: ${self:custom.project}-${self:custom.stage}-watch
    preferenceTableName: ${self:custom.project}-${self:custom.stage}-preference
    webpack:
        webpackConfig: ./webpack.config.js
        includeModules:
            forceExclude:
                - aws-sdk
        packager: 'yarn'
    dynamodb:
        start:
            port: 4569
            migrate: true
            sharedDb: true
            noStart: true

functions:
    auth:
        handler: src/lambda/auth-handler.handler
    graphql:
        handler: src/lambda/graphql-handler.handler
        environment:
            SERVERLESS_PUBLIC_USER_TABLE_NAME: ${self:custom.publicUserTableName}
            SERVERLESS_WATCH_TABLE_NAME: ${self:custom.watchTableName}
            SERVERLESS_PREFERENCE_TABLE_NAME: ${self:custom.preferenceTableName}
        events:
            - http:
                path: graphql
                method: post
                cors: true
                authorizer:
                    name: auth
                    identitySource: method.request.header.Authorization
                    resultTtlInSeconds: 300
                    type: request
            - http:
                path: graphql
                method: get
                cors: true
                authorizer:
                    name: auth
                    identitySource: method.request.header.Authorization
                    resultTtlInSeconds: 300
                    type: request

resources:
    Resources:
        PublicUserDynamoTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.publicUserTableName}
                AttributeDefinitions:
                    -
                        AttributeName: userName
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: userName
                        KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 2
                    WriteCapacityUnits: 1
        WatchDynamoTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.watchTableName}
                AttributeDefinitions:
                    -
                        AttributeName: userId
                        AttributeType: S
                    -
                        AttributeName: watchType
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: userId
                        KeyType: HASH
                    -
                        AttributeName: watchType
                        KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 2
                    WriteCapacityUnits: 1
        PreferenceDynamoTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.preferenceTableName}
                AttributeDefinitions:
                    -
                        AttributeName: userId
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: userId
                        KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 2
                    WriteCapacityUnits: 1
