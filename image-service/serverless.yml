service: artfullylondon-image-service

frameworkVersion: ">=1.2.0 <2.0.0"

package:
    individually: true

provider:
    name: aws
    runtime: nodejs8.10
    region: eu-west-1
    tracing: true
    environment: ${file(env.yml):${self:custom.stage}}
    iamManagedPolicies:
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
    iamRoleStatements:
        -
            Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - Ref: "IterationLogDynamoTable"
        -
            Effect: "Allow"
            Action: "dynamodb:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:dynamodb:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":table/"
                        - Ref: "ImageDynamoTable"
        -
            Effect: "Allow"
            Action: "s3:*"
            Resource:
                -
                    Fn::Join:
                        - ""
                        -
                            - "arn:aws:s3:::"
                            - Ref: "OriginalImagesS3Bucket"
                            - "/*"
                -
                    Fn::Join:
                        - ""
                        -
                            - "arn:aws:s3:::"
                            - Ref: "ResizedImagesS3Bucket"
                            - "/*"
        -
            Effect: "Allow"
            Action: "sns:*"
            Resource:
                Fn::Join:
                    - ""
                    -
                        - "arn:aws:sns:"
                        - Ref: "AWS::Region"
                        - ":"
                        - Ref: "AWS::AccountId"
                        - ":"
                        - ${self:custom.reprocessImagesTopicName}

plugins:
    - serverless-webpack
    - serverless-pseudo-parameters
    - serverless-plugin-tracing
    - serverless-dynamodb-local
    - serverless-offline-sns
    - serverless-offline

custom:
    project: artfullylondon
    stage: ${opt:stage}
    region: ${opt:region, self:provider.region}
    env: ${file(./env.yml):${self:custom.stage}}
    # adminSiteOrigin: https://www.artfully-admin.site
    # publicSiteOrigin: https://www.artfully.london
    reprocessImagesTopicName: ReprocessImages-${self:custom.stage}
    reprocessImagesTopicArn: "arn:aws:sns:${self:custom.region}:#{AWS::AccountId}:${self:custom.reprocessImagesTopicName}"
    iterationLogTableName: ${self:custom.project}-${self:custom.stage}-image-iteration-log
    imageTableName: ${self:custom.project}-${self:custom.stage}-image
    originalImagesBucketName: ${self:custom.project}-${self:custom.stage}-original-images
    resizedImagesBucketName: ${self:custom.project}-${self:custom.stage}-resized-images
    webpack:
        webpackConfig: ./webpack.config.js
        includeModules:
            forceExclude:
                - aws-sdk
        packager: 'yarn'
    dynamodb:
        start:
            port: 4569
            migrate: true
            sharedDb: true
            noStart: true
    serverless-offline-sns:
        port: 4002
        debug: false
        accountId: 1111111111111

functions:
    auth:
        handler: src/lambda/auth-handler.handler
    graphql:
        handler: src/lambda/graphql-handler.handler
        environment:
            SERVERLESS_IMAGE_TABLE_NAME: ${self:custom.imageTableName}
            SERVERLESS_ITERATION_LOG_TABLE_NAME: ${self:custom.iterationLogTableName}
            SERVERLESS_ORIGINAL_IMAGES_BUCKET_NAME: ${self:custom.originalImagesBucketName}
            SERVERLESS_RESIZED_IMAGES_BUCKET_NAME: ${self:custom.resizedImagesBucketName}
            SERVERLESS_REPROCESS_IMAGES_TOPIC_ARN: ${self:custom.reprocessImagesTopicArn}
        events:
            - http:
                path: graphql
                method: post
                cors: true
                authorizer:
                    name: auth
                    identitySource: method.request.header.Authorization
                    resultTtlInSeconds: 300
                    type: request
            - http:
                path: graphql
                method: get
                cors: true
                authorizer:
                    name: auth
                    identitySource: method.request.header.Authorization
                    resultTtlInSeconds: 300
                    type: request
    reprocessImagesSns:
        handler: src/lambda/reprocess-images-sns.handler
        environment:
            SERVERLESS_IMAGE_TABLE_NAME: ${self:custom.imageTableName}
            SERVERLESS_ITERATION_LOG_TABLE_NAME: ${self:custom.iterationLogTableName}
            SERVERLESS_ORIGINAL_IMAGES_BUCKET_NAME: ${self:custom.originalImagesBucketName}
            SERVERLESS_RESIZED_IMAGES_BUCKET_NAME: ${self:custom.resizedImagesBucketName}
            SERVERLESS_REPROCESS_IMAGES_TOPIC_ARN: ${self:custom.reprocessImagesTopicArn}
        timeout: 300
        events:
            - sns:
                topicName: ${self:custom.reprocessImagesTopicName}
                displayName: Reprocess images in the system

resources:
    Resources:
        ImageDynamoTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.imageTableName}
                AttributeDefinitions:
                    -
                        AttributeName: id
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: id
                        KeyType: HASH
                ProvisionedThroughput:
                    ReadCapacityUnits: 2
                    WriteCapacityUnits: 1
        IterationLogDynamoTable:
            Type: AWS::DynamoDB::Table
            DeletionPolicy: Retain
            Properties:
                TableName: ${self:custom.iterationLogTableName}
                AttributeDefinitions:
                    -
                        AttributeName: actionId
                        AttributeType: S
                    -
                        AttributeName: iterationId
                        AttributeType: S
                KeySchema:
                    -
                        AttributeName: actionId
                        KeyType: HASH
                    -
                        AttributeName: iterationId
                        KeyType: RANGE
                ProvisionedThroughput:
                    ReadCapacityUnits: 2
                    WriteCapacityUnits: 1
        OriginalImagesS3Bucket:
            Type: AWS::S3::Bucket
            DeletionPolicy: Retain
            Properties:
                BucketName: ${self:custom.originalImagesBucketName}
                CorsConfiguration:
                    CorsRules:
                        -
                            AllowedHeaders:
                                - "*"
                            AllowedMethods:
                                - GET
                            AllowedOrigins:
                                - "*"
                                # - ${self:custom.adminSiteOrigin}
                            ExposedHeaders:
                                - DATE
                            Id: ${self:custom.originalImagesBucketName}
                            MaxAge: "3600"
        OriginalImagesS3BucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket:
                    Ref: "OriginalImagesS3Bucket"
                PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                        -
                            Sid: AddPerm
                            Effect: Allow
                            Principal: "*"
                            Action:
                                - "s3:GetObject"
                            Resource:
                                Fn::Join:
                                    - ""
                                    -
                                        - "arn:aws:s3:::"
                                        - Ref: "OriginalImagesS3Bucket"
                                        - "/*"
        ResizedImagesS3Bucket:
            Type: AWS::S3::Bucket
            DeletionPolicy: Retain
            Properties:
                BucketName: ${self:custom.resizedImagesBucketName}
                WebsiteConfiguration:
                    IndexDocument: "index.html"
                CorsConfiguration:
                    CorsRules:
                        -
                            AllowedHeaders:
                                - "*"
                            AllowedMethods:
                                - GET
                            AllowedOrigins:
                                - "*"
                                # - ${self:custom.adminSiteOrigin}
                                # - ${self:custom.publicSiteOrigin}
                            ExposedHeaders:
                                - DATE
                            Id: ${self:custom.resizedImagesBucketName}
                            MaxAge: "3600"
        ResizedImagesS3BucketPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket:
                    Ref: "ResizedImagesS3Bucket"
                PolicyDocument:
                    Version: "2012-10-17"
                    Statement:
                        -
                            Sid: AddPerm
                            Effect: Allow
                            Principal: "*"
                            Action:
                                - "s3:GetObject"
                            Resource:
                                Fn::Join:
                                    - ""
                                    -
                                        - "arn:aws:s3:::"
                                        - Ref: "ResizedImagesS3Bucket"
                                        - "/*"
